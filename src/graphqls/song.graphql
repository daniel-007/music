enum Provider {
  kugou
  netease
  xiami
}

enum BitRate {
  mid
  high
  sq
  hq
}

enum RankType {
  new
  hot
}

input ISearchQuery {
  keyword: String!
  skip: Int
  limit: Int
}

type ISearchArtist {
  id: String
  name: String!
}
type ISearchAlbum {
  id: String
  name: String
  img: String
}

type ISearchItem {
  provider: Provider!
  id: String!
  name: String!
  artists: [ISearchArtist]!
  album: ISearchAlbum
}

type SongDetail {
  id: String!
  name: String!
  lrc: String!
  provider: Provider!
  artists: [ISearchArtist]!
  klyric: String
  album: ISearchAlbum
  peakStartTime: Int
  peakEndTime: Int
  peaks: [Float]

}

type PeakDetail {
  provider: Provider!
  id: String!
  peakStartTime: Int!
  peakEndTime: Int!
  peaks: [Float]!
}

input PeakTimeInput {
  id: String!
  provider: Provider!
  peakStartTime: Int!
  peakEndTime: Int!
  peaks: [Float]!
}


type Query {
  search(keyword: String!, providers: [Provider]): [ISearchItem]
  get(id: ID!, provider: Provider!, br: BitRate): SongDetail
  rank(provider: Provider!, rankType: RankType): [ISearchItem]
  playlist(provider: Provider!, id: String): [ISearchItem]
  album(provider: Provider!, id: String): [ISearchItem]
  parseUrl(url: String!): [ISearchItem]
}

type Mutation {
  triggerPeak(id: ID!, provider: Provider!): Boolean
  addPeakTime(peakTime: PeakTimeInput!): Boolean
  deletePeakTime(id: ID!, provider: Provider!): Boolean
}

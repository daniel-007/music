{"version":3,"sources":["helpers/audio/constant.ts","helpers/audio/helper.ts","helpers/audio/interface.ts","helpers/audio/audio-event.ts","helpers/player/interface.ts","helpers/audio/rx-audio.ts","helpers/audio/pool-audio.ts","helpers/player/constants.ts","helpers/player/play.ts","helpers/player/action.ts","helpers/player/status.ts","helpers/player/base.ts","helpers/player/index.ts","apollo/graphql.ts","helpers/player/demo.ts","apollo/index.ts","rx/index.ts","components/bottom-nav/index.tsx","components/song-list/song-item/index.tsx","components/song-list/index.tsx","helpers/singleton.ts","components/top-nav/index.tsx","pages/search/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["DEFAULT_PEAK_CONFIG","minVolume","duration","layIn","layOut","before","after","precision","getSongUrl","song","id","provider","AudioEvent","Status","RxAudio","peakConfig","audioContext","AudioContext","source","analyser","gainNode","gainVolume","errorDelaySeconds","audio","crossOrigin","preload","createMediaElementSource","createAnalyser","createGain","connect","destination","setting","currentTime","this","src","url","load","changePeak","peakStartTime","play","e","console","warn","pause","layInFailedSource$","event","playing","pipe","tap","info","name","take","switchMap","timeupdate","timeout","takeUntil","release$","catchError","layInFailed$","next","EMPTY","merge","tryLayIn","mapTo","undefined","gain","setValueAtTime","linearRampToValueAtTime","from","removeAttribute","disconnect","close","value","Audio","Subject","eventName","play$","played","played$","error","error$","ended","ended$","layoutTouch","layoutTouch$","layoutEnded","layoutEnded$","fromEvent","map","data","lodashMerge","Date","now","debug","endTime","filter","PoolAudio","pool","restList","list","Object","keys","poolKey","some","forEach","key","release","preload$","getSong","checkInPool","createPoolItem","getPoolItem","item","rxAudio","paused","songUrl","poolItem","subscription","unsubscribe","push","length","pop","source$","peakSong","set","shareReplay","bufferSize","refCount","subscribe","DEFAULT_CONFIG","preloadLen","errorRetry","songRetries","playerRetries","volume","currentIndex","basePlaylistId","PlayerPlay","songChange$","click$","throttleTime","nu","setIndex","status","loading","end$","setIndexStep","errorStatus","continuous","config","currentSong","of","delay","Math","sqrt","err","caught","share","playAt","changed","updateSongInfo","persistTask$","songStatus$","setAudioVolume","throwError","index","loadNextSongs","songList","findIndex","splice","getValidIndex","position","song2index","position2index","oldSong","removeIndex","start","deleteIndex","songs","wrapList","isPlay","isLoadNext","updateSongs","offset","end","slice","preloadTask$","endShiftLeft","playSong","step","poolAudio","player","Number","MAX_SAFE_INTEGER","peakDuration","log","Provider","Privilege","BitRate","AddPeakTimeDocument","gql","KrcDocument","LrcDocument","ParseUrlDocument","SearchDocument","SongDocument","defaultWrapper","sdkFunction","demoSongs","Kugou","artists","album","img","privilege","Xiami","Netease","sdk","client","withWrapper","addPeakTime","variables","request","print","krc","lrc","parseUrl","search","getSdk","GraphQLClient","useEventHandler","defaultHandler","subject","useMemo","callback","useCallback","useEffect","Array","complete","BottomNav","useState","setSong","s","isPaused","setPaused","onClick","debounceTime","onPre","pre$","onNext","next$","className","alt","join","IconButton","SongListItem","props","add","SongList","searchSubject","TopNav","onKeyUp","keyUp$","target","trim","distinctUntilChanged","Button","TextField","type","placeholder","aria-label","size","fontSize","Search","setSongs","v","keyword","App","loadSongList","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e413aa19.chunk.js","sourcesContent":["import { PeakConfig } from './interface';\n\nexport const DEFAULT_PEAK_CONFIG: PeakConfig = {\n  minVolume: 0.2,\n  duration: 35,\n  layIn: 2,\n  layOut: 3,\n  before: 6,\n  after: 4,\n  precision: 10,\n};\n","import { Provider } from '../../apollo/graphql';\n\nconst proxyUrl = '//proxy.music.xinshangshangxin.com'\n\nfunction getSongUrl(song: { id: string; provider: Provider; name?: string }) {\n  return `${proxyUrl}?id=${song.id}&provider=${song.provider}`;\n}\n\nexport { getSongUrl };\n","import { Song } from '../../apollo/graphql';\n\nexport enum AudioEvent {\n  'ended' = 'ended',\n  'error' = 'error',\n  'play' = 'play',\n  'playing' = 'playing',\n  'pause' = 'pause',\n  'timeupdate' = 'timeupdate',\n\n  // 'canplay' = 'canplay',\n  // 'loadedmetadata' = 'loadedmetadata',\n  // 'loadstart' = 'loadstart',\n\n  'canplay' = 'canplay',\n  'stalled' = 'stalled',\n  'layoutTouch' = 'layoutTouch',\n  'layoutEnded' = 'layoutEnded',\n  'played' = 'played',\n}\n\nexport type Omit<T, K extends keyof T> = Pick<T, Exclude<keyof T, K>>;\n\nexport type SongDuration = 0 | 20 | 25 | 30 | 35 | 40 | 45 | 50 | 55 | 60;\n\n// 总共播放时长 = duration + before + end\nexport interface PeakConfig {\n  minVolume: number;\n  // 高潮音乐时长\n  duration: SongDuration;\n  // 渐入时长\n  layIn: number;\n  // 渐出时长\n  layOut: number;\n  // 高潮音乐前置时间\n  before: number;\n  // 高潮音乐后置时间\n  after: number;\n  // peak 数组的精确度\n  precision: number;\n}\n\nexport interface PlayerSong extends Omit<Song, 'artists' | 'album' | '__typename'> {\n  url: string;\n  artists?:\n    | {\n        id?: string | null;\n        name: string;\n      }[]\n    | null;\n  peakStartTime?: number;\n  peakDuration?: number;\n  album?: {\n    id?: string | null;\n    name: string;\n    img?: string | null;\n  } | null;\n}\n\nexport interface PeakSong extends PlayerSong {\n  peakStartTime: number;\n  peakDuration: number;\n}\n\nexport interface Setting {\n  song: PlayerSong;\n  peakConfig: PeakConfig;\n  currentTime?: number;\n  volume?: number;\n}\n","import { merge as lodashMerge } from 'lodash';\nimport { fromEvent, merge, Observable, Subject } from 'rxjs';\nimport { filter, map, mapTo, take, takeUntil, tap } from 'rxjs/operators';\n\nimport { AudioEvent, PeakConfig } from './interface';\n\nexport class AudioListeners {\n  public audio = new Audio();\n\n  public peakConfig: PeakConfig;\n\n  public release$ = new Subject<number>();\n\n  protected layInFailed$ = new Subject<any>();\n\n  protected peakStartTime = 0;\n\n  constructor(peakConfig: PeakConfig) {\n    this.audio.crossOrigin = 'anonymous';\n    this.audio.preload = 'auto';\n\n    this.peakConfig = peakConfig;\n  }\n\n  public event(\n    eventName: AudioEvent\n  ): Observable<\n    | { event: AudioEvent.layoutTouch; data: { endTime: number; currentTime: number } }\n    | { event: AudioEvent }\n  > {\n    switch (eventName) {\n      case AudioEvent.play:\n        return this.play$();\n      case AudioEvent.played:\n        return this.played$();\n      case AudioEvent.error:\n        return this.error$();\n      case AudioEvent.ended:\n        return this.ended$();\n      case AudioEvent.layoutTouch:\n        return this.layoutTouch$();\n      case AudioEvent.layoutEnded:\n        return this.layoutEnded$();\n      default:\n        return fromEvent(this.audio, eventName).pipe(\n          map((data) => ({\n            event: eventName,\n            data,\n          })),\n          takeUntil(\n            merge(fromEvent(this.audio, 'ended'), fromEvent(this.audio, 'error'), this.release$)\n          )\n        );\n    }\n  }\n\n  protected changePeak({\n    peakStartTime,\n    peakConfig,\n  }: { peakStartTime?: number; peakConfig?: PeakConfig } = {}) {\n    if (peakStartTime !== undefined) {\n      this.peakStartTime = peakStartTime;\n    }\n\n    if (peakConfig !== undefined) {\n      lodashMerge(this.peakConfig, peakConfig);\n    }\n  }\n\n  protected destroy() {\n    this.release$.next(Date.now());\n    delete this.audio;\n  }\n\n  private play$() {\n    return fromEvent(this.audio, AudioEvent.play).pipe(\n      take(1),\n      tap((e) => {\n        console.debug('====> Event:play', e);\n      }),\n      mapTo({ event: AudioEvent.play }),\n      takeUntil(this.release$)\n    );\n  }\n\n  private error$() {\n    // 监听错误事件\n    return merge(fromEvent(this.audio, AudioEvent.error), this.layInFailed$).pipe(\n      take(1),\n      tap((e) => {\n        console.debug('====> Event:error', e);\n      }),\n      mapTo({ event: AudioEvent.error }),\n      takeUntil(this.release$)\n    );\n  }\n\n  private ended$() {\n    // 监听结束事件\n    return fromEvent(this.audio, AudioEvent.ended).pipe(\n      take(1),\n      mapTo({ event: AudioEvent.ended }),\n      takeUntil(this.release$)\n    );\n  }\n\n  private layoutTouch$(): Observable<{\n    event: AudioEvent.layoutTouch;\n    data: { endTime: number; currentTime: number };\n  }> {\n    const endTime = this.peakStartTime + this.peakConfig.duration + this.peakConfig.after;\n\n    return fromEvent(this.audio, AudioEvent.timeupdate).pipe(\n      filter(() => {\n        if (endTime && this.audio.currentTime >= endTime - this.peakConfig.layOut) {\n          console.debug('layoutTouch 片段结尾');\n          return true;\n        }\n        if (this.audio.currentTime >= this.audio.duration - this.peakConfig.layOut) {\n          console.debug('layoutTouch 整首歌结尾');\n          // 整首歌结尾\n          return true;\n        }\n        return false;\n      }),\n      take(1),\n      map(() => ({\n        event: AudioEvent.layoutTouch as any,\n        data: { endTime, currentTime: this.audio.currentTime },\n      })),\n      takeUntil(merge(fromEvent(this.audio, 'ended'), fromEvent(this.audio, 'error'), this.release$))\n    );\n  }\n\n  private layoutEnded$() {\n    const endTime = this.peakStartTime + this.peakConfig.duration + this.peakConfig.after;\n\n    return fromEvent(this.audio, AudioEvent.timeupdate).pipe(\n      filter(() => {\n        if (endTime && this.audio.currentTime >= endTime) {\n          return true;\n        }\n        if (this.audio.currentTime >= this.audio.duration) {\n          return true;\n        }\n        return false;\n      }),\n      take(1),\n      mapTo({ event: AudioEvent.layoutEnded }),\n      takeUntil(\n        merge(\n          fromEvent(this.audio, AudioEvent.ended),\n          fromEvent(this.audio, AudioEvent.error),\n          this.release$\n        )\n      )\n    );\n  }\n\n  private played$() {\n    return fromEvent(this.audio, AudioEvent.playing).pipe(\n      take(1),\n      mapTo({ event: AudioEvent.played }),\n      takeUntil(this.release$)\n    );\n  }\n}\n","import { PeakConfig } from '../audio/interface';\n\nexport interface ErrorRetry {\n  songRetries: number;\n  playerRetries: number;\n}\n\nexport interface Config {\n  errorRetry: ErrorRetry;\n  currentIndex: number;\n  preloadLen: number;\n  peakConfig: PeakConfig;\n  volume: number;\n  viewed?: boolean;\n\n  basePlaylistId: string;\n}\n\nexport enum Status {\n  playing = 'playing',\n  paused = 'paused',\n  loading = 'loading',\n}\n\nexport type Position = number | 'next' | 'end' | 'current';\n\nexport type PlaylistPosition =\n  | Exclude<Position, 'current'>\n  | 'append'\n  | 'insert'\n  | 'cover'\n  | 'drop';\n","import { EMPTY, from, merge, Observable } from 'rxjs';\nimport { catchError, mapTo, switchMap, take, takeUntil, tap, timeout } from 'rxjs/operators';\n\nimport { AudioListeners } from './audio-event';\nimport { AudioEvent, PeakConfig, PlayerSong, Setting } from './interface';\n\nexport class RxAudio extends AudioListeners {\n  private audioContext = new AudioContext();\n\n  private song: PlayerSong | null = null;\n\n  private source: MediaElementAudioSourceNode;\n\n  private analyser: AnalyserNode;\n\n  private gainNode: GainNode;\n\n  private gainVolume = 1;\n\n  private errorDelaySeconds = 0.5;\n\n  constructor(peakConfig: PeakConfig) {\n    super(peakConfig);\n\n    this.audio.crossOrigin = 'anonymous';\n    this.audio.preload = 'auto';\n\n    this.source = this.audioContext.createMediaElementSource(this.audio);\n    this.analyser = this.audioContext.createAnalyser();\n    this.gainNode = this.audioContext.createGain();\n\n    this.source.connect(this.analyser);\n    this.analyser.connect(this.gainNode);\n    this.gainNode.connect(this.audioContext.destination);\n  }\n\n  public set(setting: Setting & { currentTime: number }) {\n    const { song, currentTime, peakConfig } = setting;\n\n    this.song = song;\n\n    // 标记播放范围\n    // https://developer.mozilla.org/zh-CN/docs/Web/Guide/HTML/Using_HTML5_audio_and_video#%E6%A0%87%E8%AE%B0%E6%92%AD%E6%94%BE%E8%8C%83%E5%9B%B4\n    this.audio.src = `${this.song.url}#t=${currentTime},${currentTime +\n      peakConfig.duration +\n      peakConfig.after +\n      1}`;\n    this.audio.load();\n\n    this.changePeak({\n      peakStartTime: song.peakStartTime,\n      peakConfig,\n    });\n  }\n\n  public get volume() {\n    return this.gainVolume;\n  }\n\n  public set volume(value: number) {\n    this.gainVolume = value;\n    this.gainNode.gain.setValueAtTime(value, this.audioContext.currentTime);\n  }\n\n  public play() {\n    try {\n      this.audio.play();\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  public pause() {\n    try {\n      this.audio.pause();\n    } catch (e) {\n      console.warn(e);\n    }\n  }\n\n  public layIn(currentTime?: number): Observable<void> {\n    const song = this.song as PlayerSong;\n    // 处理特殊情况\n    // The AudioContext was not allowed to start. It must be resumed (or created) after a user gesture on the page. https://goo.gl/7K7WLu\n    const layInFailedSource$ = this.event(AudioEvent.playing).pipe(\n      tap(() => {\n        console.info(`======>, layIn checking ┣ ${song.name} ┫`, this.audio.src, song);\n      }),\n      take(1),\n      switchMap(() =>\n        this.event(AudioEvent.timeupdate).pipe(\n          take(1),\n          timeout(this.errorDelaySeconds * 1000),\n          takeUntil(this.release$)\n        )\n      ),\n      tap(() => {\n        console.info(`======>, layIn success ┣ ${song.name} ┫`);\n      }),\n      catchError(() => {\n        console.warn(`======>, layIn failed ┣ ${song.name} ┫`, this.errorDelaySeconds);\n\n        this.pause();\n        this.errorDelaySeconds = (this.errorDelaySeconds + 1) ** 2;\n        this.layInFailed$.next();\n        return EMPTY;\n      })\n    );\n\n    return merge(layInFailedSource$, this.tryLayIn(currentTime)).pipe(\n      mapTo(undefined),\n      takeUntil(this.release$)\n    );\n  }\n\n  private tryLayIn(currentTime?: number): Observable<void> {\n    this.pause();\n\n    if (currentTime) {\n      this.audio.currentTime = currentTime;\n    }\n\n    if (this.peakConfig.layIn <= 0) {\n      return from(this.audio.play());\n    }\n\n    this.gainNode.gain.setValueAtTime(0, this.audioContext.currentTime);\n    this.gainNode.gain.linearRampToValueAtTime(\n      this.gainVolume,\n      this.audioContext.currentTime + this.peakConfig.layIn\n    );\n\n    return from(this.audio.play());\n  }\n\n  public layOut(): void {\n    if (this.peakConfig.layOut <= 0) {\n      return;\n    }\n\n    if (this.gainVolume > this.peakConfig.minVolume) {\n      this.gainNode.gain.setValueAtTime(this.gainVolume, this.audioContext.currentTime);\n\n      this.gainNode.gain.linearRampToValueAtTime(\n        this.peakConfig.minVolume,\n        this.audioContext.currentTime + this.peakConfig.layOut\n      );\n    }\n  }\n\n  public release() {\n    this.pause();\n    this.audio.removeAttribute('src');\n    this.release$.next();\n  }\n\n  public destroy() {\n    this.source.disconnect();\n    this.analyser.disconnect();\n    this.gainNode.disconnect();\n    this.audioContext.close();\n\n    delete this.source;\n    delete this.analyser;\n    delete this.gainNode;\n    delete this.audioContext;\n\n    super.destroy();\n  }\n}\n","import { Observable, Subscription } from 'rxjs';\nimport { map, shareReplay, tap, takeUntil } from 'rxjs/operators';\n\nimport { PeakConfig, PeakSong, PlayerSong, Setting } from './interface';\nimport { RxAudio } from './rx-audio';\n\nexport type AudioLoadSource = Observable<{\n  song: PeakSong;\n  changed: boolean;\n  rxAudio: RxAudio;\n}>;\n\ninterface PoolItem {\n  source$: AudioLoadSource;\n  subscription: Subscription;\n  rxAudio: RxAudio;\n  peakConfig: PeakConfig;\n}\n\nexport class PoolAudio {\n  // 已用池\n  private pool: {\n    [key: string]: PoolItem;\n  } = {};\n\n  // 可用池\n  private restList: RxAudio[] = [];\n\n  public maintain({\n    list,\n    peakConfig,\n  }: {\n    list: {\n      song: PlayerSong;\n      preload$: Observable<{\n        song: PeakSong;\n        changed: boolean;\n      }>;\n    }[];\n    peakConfig: PeakConfig;\n  }) {\n    const poolKeys = Object.keys(this.pool);\n\n    const restKeys = poolKeys.filter((poolKey) => !list.some(({ song }) => song.url === poolKey));\n\n    // 删除用不到的\n    restKeys.forEach((key) => {\n      this.release(key);\n    });\n\n    // build现在需要的\n    list.forEach(({ song, preload$ }) => {\n      this.getSong(\n        {\n          song,\n          peakConfig,\n        },\n        preload$\n      );\n    });\n  }\n\n  public getSong(\n    setting: Setting,\n    preload$: Observable<{\n      song: PeakSong;\n      changed: boolean;\n    }>\n  ): PoolItem {\n    const { song, peakConfig } = setting;\n    if (!this.checkInPool(song, peakConfig)) {\n      this.createPoolItem(setting, preload$);\n    }\n\n    return this.getPoolItem(song);\n  }\n\n  private getPoolItem(song: PlayerSong): PoolItem {\n    return this.pool[song.url];\n  }\n\n  private checkInPool(song: PlayerSong, peakConfig: PeakConfig): boolean {\n    const item = this.getPoolItem(song);\n\n    if (!item) {\n      return false;\n    }\n\n    // 还在播放中\n    if (item.rxAudio && !item.rxAudio.audio.paused) {\n      return true;\n    }\n\n    if (item.peakConfig.duration !== peakConfig.duration) {\n      console.info('peakConfig change, rebuild');\n      this.release(song.url);\n      return false;\n    }\n\n    return true;\n  }\n\n  private release(songUrl: string): void {\n    const poolItem = this.pool[songUrl];\n    if (!poolItem) {\n      return;\n    }\n\n    const { subscription, rxAudio } = poolItem;\n    rxAudio.release();\n\n    // unsubscribe\n    subscription.unsubscribe();\n\n    delete this.pool[songUrl];\n    this.restList.push(rxAudio);\n  }\n\n  private createPoolItem(\n    setting: Setting,\n    preload$: Observable<{\n      song: PeakSong;\n      changed: boolean;\n    }>\n  ): void {\n    const { song, peakConfig } = setting;\n\n    let rxAudio: RxAudio;\n    if (this.restList.length) {\n      rxAudio = this.restList.pop() as RxAudio;\n    } else {\n      rxAudio = new RxAudio(peakConfig);\n    }\n\n    const source$ = preload$.pipe(\n      tap(({ song: peakSong }) => {\n        rxAudio.set({\n          song: peakSong,\n          currentTime: peakSong.peakStartTime,\n          peakConfig,\n        });\n      }),\n      map((data) => ({ ...data, rxAudio })),\n      shareReplay({\n        bufferSize: 1,\n        refCount: true,\n      }),\n      takeUntil(rxAudio.release$)\n    );\n\n    this.pool[song.url] = {\n      // 先subscribe 执行起来\n      subscription: source$.subscribe(({ song: peakSong }) => {\n        console.debug(`预载入 ┣ ${peakSong.name} ┫ 成功`, peakSong);\n      }, console.warn),\n      source$,\n      peakConfig: {\n        ...peakConfig,\n      },\n      rxAudio,\n    };\n  }\n}\n","import { DEFAULT_PEAK_CONFIG } from '../audio/constant';\nimport { Config } from './interface';\n\nexport const TEMP_PLAYLIST_ID = '临时列表';\nexport const DEFAULT_PLAYLIST_ID = '默认歌单';\n\nexport const DEFAULT_CONFIG: Config = {\n  preloadLen: 2,\n  peakConfig: {\n    ...DEFAULT_PEAK_CONFIG,\n  },\n  errorRetry: {\n    songRetries: 3,\n    playerRetries: 10,\n  },\n  volume: 1,\n  currentIndex: 0,\n  basePlaylistId: TEMP_PLAYLIST_ID,\n};\n","import { EMPTY, merge, Observable, of, throwError } from 'rxjs';\nimport {\n  catchError,\n  delay,\n  filter,\n  map,\n  mapTo,\n  share,\n  switchMap,\n  takeUntil,\n  tap,\n  throttleTime,\n} from 'rxjs/operators';\n\nimport { AudioEvent, PeakSong, PlayerSong } from '../audio/interface';\nimport { AudioLoadSource } from '../audio/pool-audio';\nimport { RxAudio } from '../audio/rx-audio';\nimport { PlayerAction } from './action';\nimport { Status } from './interface';\n\nexport class PlayerPlay extends PlayerAction {\n  // 切换其它歌曲\n  public songChange$: Observable<PlayerSong>;\n\n  constructor() {\n    super();\n\n    this.songChange$ = merge(\n      this.click$.pipe(\n        throttleTime(500),\n        tap((nu) => {\n          // 游标变更\n          this.setIndex(nu);\n\n          // 状态变更\n          this.status = Status.loading;\n        }),\n        mapTo('click')\n      ),\n      this.end$.pipe(\n        throttleTime(500),\n        tap(() => {\n          // 游标变更\n          this.setIndexStep(1);\n        }),\n        mapTo('end')\n      ),\n      this.error$.pipe(\n        tap(() => {\n          this.errorStatus.nu += 1;\n          this.errorStatus.continuous += 1;\n\n          // 一直出错, 就直接暂停\n          if (this.errorStatus.continuous >= this.config.errorRetry.playerRetries) {\n            this.status = Status.paused;\n          }\n\n          // 当前歌曲一直出错, 就播放下一首\n          if (this.errorStatus.nu >= this.config.errorRetry.songRetries) {\n            this.setIndexStep(1);\n          }\n\n          console.debug({\n            ...this.errorStatus,\n            ...this.config.errorRetry,\n          });\n        }),\n        mapTo('error')\n      )\n    ).pipe(\n      switchMap((eventName) => {\n        console.debug(\n          '歌曲变更触发',\n          '触发类型',\n          eventName,\n          '触发歌曲下标',\n          this.currentIndex,\n          this.currentSong\n        );\n\n        if (eventName === 'click') {\n          return of(null);\n        }\n        if (eventName === 'end') {\n          return of(null).pipe(delay(10));\n        }\n        if (eventName === 'error') {\n          return of(null).pipe(delay(Math.sqrt(this.errorStatus.nu) * 500));\n        }\n        return of(null);\n      }),\n      tap(() => {\n        if (this.rxAudio) {\n          this.rxAudio.pause();\n        }\n\n        if (this.status !== Status.paused) {\n          this.status = Status.loading;\n        }\n      }),\n      map(() => this.getSong(this.currentIndex)),\n      filter((song): song is PlayerSong => {\n        return !!song;\n      }),\n      catchError((err, caught) => {\n        console.warn('songChange$ error', err);\n        this.status = Status.paused;\n\n        return caught;\n      }),\n      share()\n    );\n  }\n\n  public play() {\n    this.status = Status.loading;\n\n    if (this.rxAudio) {\n      this.rxAudio.layIn();\n      this.play$.next();\n    } else {\n      this.playAt(this.currentIndex);\n    }\n  }\n\n  public playSong(\n    source$: AudioLoadSource\n  ): Observable<\n    | never\n    | {\n        rxAudio: RxAudio;\n        song: PeakSong;\n      }\n  > {\n    return source$.pipe(\n      tap(({ song, rxAudio, changed }) => {\n        console.debug(`play ┣ ${song.name} ┫ ┣ ${song.provider} ┫`, {\n          currentTime: rxAudio.audio.currentTime,\n          src: rxAudio.audio.src,\n          currentIndex: this.currentIndex,\n          status: this.status,\n          peakConfig: rxAudio.peakConfig,\n          song,\n        });\n\n        if (changed) {\n          console.debug('song changed, update song info', song);\n          this.updateSongInfo(song);\n          this.persistTask$.next();\n        }\n\n        // 状态变换, 需要做一些操作\n        this.songStatus$({ song, rxAudio })\n          .pipe(takeUntil(this.songChange$))\n          .subscribe(\n            () => {},\n            (error) => {\n              console.warn('songStatus$ handle error', error);\n            }\n          );\n      }),\n      switchMap(({ song, rxAudio }) => {\n        if (!rxAudio) {\n          return throwError('no rxAudio');\n        }\n\n        // 替换为当前要播放的\n        this.rxAudio = rxAudio;\n\n        if (this.status === Status.paused) {\n          console.debug('当前状态为停止状态', song);\n          return of({ rxAudio, song });\n        }\n\n        this.status = Status.playing;\n\n        // 设置音量\n        this.setAudioVolume(this.volume);\n\n        return rxAudio.layIn(song.peakStartTime).pipe(\n          tap(() => {\n            this.play$.next();\n          }),\n          map(() => ({ song, rxAudio }))\n        );\n      }),\n      catchError((err) => {\n        console.warn('load audio error', err);\n\n        if (this.status !== Status.paused) {\n          this.error$.next({ index: this.currentIndex, data: err });\n        }\n\n        return EMPTY;\n      }),\n      takeUntil(this.songChange$)\n    );\n  }\n\n  private songStatus$({ song, rxAudio }: { song: PeakSong; rxAudio: RxAudio }) {\n    return merge(\n      // 错误\n      rxAudio.event(AudioEvent.error).pipe(\n        tap(() => {\n          this.error$.next({ index: this.currentIndex, data: AudioEvent.error });\n        })\n      ),\n      // 结束\n      merge(\n        // 正常结束\n        rxAudio.event(AudioEvent.ended),\n        // layOut 结束\n        rxAudio.event(AudioEvent.layoutEnded)\n      ).pipe(\n        throttleTime(500),\n        tap(() => {\n          this.end$.next(song);\n        })\n      ),\n      // 渐出\n      rxAudio.event(AudioEvent.layoutTouch).pipe(\n        tap(() => {\n          rxAudio.layOut();\n        })\n      ),\n      // 当前歌曲播放成功\n      rxAudio.event(AudioEvent.played).pipe(\n        tap(() => {\n          // 事件触发\n          this.played$.next();\n          // 清空列表错误次数\n          this.errorStatus.continuous = 0;\n          // 载入下面歌曲\n          this.loadNextSongs();\n        })\n      )\n    );\n  }\n\n  protected updateSongInfo(song: PlayerSong | PeakSong) {\n    const index = this.songList.findIndex(\n      ({ id, provider }) => id === song.id && provider === song.provider\n    );\n\n    if (index >= 0) {\n      this.songList.splice(index, 1, song);\n    }\n  }\n}\n","import { getSongUrl } from '../audio/helper';\nimport { PlayerSong } from '../audio/interface';\nimport { Position, Status } from './interface';\nimport { PlayerStatus } from './status';\n\nexport class PlayerAction extends PlayerStatus {\n  public setVolume(value: number) {\n    this.volume = value;\n\n    this.setAudioVolume(value);\n  }\n\n  public pause() {\n    this.status = Status.paused;\n\n    if (this.rxAudio) {\n      this.rxAudio.pause();\n    }\n  }\n\n  public previous(): void {\n    if (!this.songList.length) {\n      return;\n    }\n\n    this.click$.next(this.getValidIndex(this.currentIndex - 1));\n  }\n\n  public next(): void {\n    if (!this.songList.length) {\n      return;\n    }\n\n    this.end$.next();\n  }\n\n  public playAt(position: Position): void;\n\n  public playAt(position: Pick<PlayerSong, 'id' | 'provider'>): void;\n\n  public playAt(position: Position | Pick<PlayerSong, 'id' | 'provider'>): void {\n    if (typeof position === 'object') {\n      const index = this.song2index(position);\n\n      this.click$.next(this.position2index(index, true));\n    } else {\n      this.click$.next(this.position2index(position, true));\n    }\n  }\n\n  /**\n   *\n   * @param song PlayerSong\n   * @param position next 插入到下一首, end 插入到末尾\n   */\n  public add(song: Omit<PlayerSong, 'url'>, position: Position = 'current') {\n    const oldSong = this.currentSong;\n    // 先删除重复歌曲\n    const removeIndex = this.songList.findIndex(\n      ({ provider, id }) => provider === song.provider && id === song.id\n    );\n    if (removeIndex >= 0) {\n      this.songList.splice(removeIndex, 1);\n    }\n\n    const start = this.position2index(position);\n\n    // 再加入歌单\n    this.songList.splice(start, 0, {\n      ...song,\n      url: getSongUrl(song),\n    });\n\n    // 更正游标\n    this.currentIndex = this.song2index(oldSong);\n\n    this.persistTask$.next();\n  }\n\n  public remove(index: number): void;\n\n  public remove(song: PlayerSong): void;\n\n  public remove(item: number | PlayerSong) {\n    const oldSong = this.currentSong;\n\n    let deleteIndex: number;\n    if (typeof item !== 'number') {\n      deleteIndex = this.song2index(item);\n    } else {\n      deleteIndex = item;\n    }\n\n    this.songList.splice(this.getValidIndex(deleteIndex), 1);\n\n    // 正在播放的歌曲被删除, 播放下一首\n    if (this.currentIndex === deleteIndex) {\n      this.error$.next({ index: this.currentIndex, data: 'delete playing song' });\n\n      if (this.status === Status.paused) {\n        this.pause();\n      }\n    } else {\n      this.currentIndex = this.song2index(oldSong);\n    }\n\n    this.persistTask$.next();\n  }\n\n  public updateSongs(songs: Omit<PlayerSong, 'url'>[]) {\n    const wrapList = songs.map((song) => ({\n      ...song,\n      url: getSongUrl(song),\n    }));\n\n    // 更新列表\n    this.songList.length = 0;\n    this.songList.push(...wrapList);\n  }\n\n  public loadSongList(\n    list: Omit<PlayerSong, 'url'>[],\n    currentIndex = 0,\n    isPlay = false,\n    isLoadNext = true\n  ) {\n    // 更正游标\n    this.currentIndex = currentIndex;\n    // 更新列表\n    this.updateSongs(list);\n\n    // 保存到storage\n    this.persistTask$.next();\n\n    if (this.songList.length && isLoadNext) {\n      // 触发歌曲载入\n      this.loadNextSongs();\n    }\n\n    if (isPlay && this.songList.length) {\n      this.playAt(this.currentIndex);\n    }\n  }\n\n  public loadNextSongs(offset = 0): void {\n    const start = this.getValidIndex(this.currentIndex + offset);\n    let end = start + this.config.preloadLen + 1;\n\n    let songs: PlayerSong[] = [];\n\n    if (end <= this.songList.length) {\n      songs = this.songList.slice(start, end);\n    } else {\n      end = this.getValidIndex(end);\n\n      songs = [...this.songList.slice(start), ...this.songList.slice(0, end)];\n    }\n\n    console.info(\n      'load songs: ',\n      [start, end],\n      songs.map(({ name }) => name)\n    );\n\n    this.preloadTask$.next(songs);\n  }\n\n  public position2index(position: Position, endShiftLeft = false) {\n    let index: number;\n    switch (position) {\n      case 'current':\n        index = this.getValidIndex(this.currentIndex);\n        if (index === -1) {\n          index = 0;\n        }\n        break;\n      case 'next':\n        index = this.getValidIndex(this.currentIndex + 1);\n        break;\n      case 'end':\n        index = this.songList.length;\n        if (endShiftLeft) {\n          index = this.getValidIndex(index - 1);\n        }\n        break;\n      default:\n        index = position;\n        break;\n    }\n\n    return index;\n  }\n\n  public song2index(playSong: Pick<PlayerSong, 'id' | 'provider'> | null) {\n    if (playSong === null) {\n      return -1;\n    }\n\n    return this.songList.findIndex(\n      (song) => song.id === playSong.id && song.provider === playSong.provider\n    );\n  }\n\n  public get currentSong() {\n    return this.getSong(this.currentIndex);\n  }\n\n  protected getValidIndex(nu: number): number {\n    if (!this.songList.length) {\n      return -1;\n    }\n\n    // 往前选择\n    // eslint-disable-next-line no-param-reassign\n    nu += this.songList.length;\n    if (nu < 0) {\n      return -1;\n    }\n\n    return nu % this.songList.length;\n  }\n\n  protected setIndex(nu: number): number {\n    this.currentIndex = this.getValidIndex(nu);\n    // 游标变更了, 错误标志位也要重置\n    this.errorStatus.nu = 0;\n\n    return this.currentIndex;\n  }\n\n  protected setIndexStep(step: number): number {\n    return this.setIndex(this.currentIndex + step);\n  }\n\n  protected setAudioVolume(value: number) {\n    if (this.rxAudio) {\n      this.rxAudio.volume = value;\n    }\n  }\n\n  protected getSong(index: number): PlayerSong | null {\n    // eslint-disable-next-line no-param-reassign\n    index = this.getValidIndex(index);\n\n    if (index < 0) {\n      return null;\n    }\n\n    return this.songList[index];\n  }\n}\n","import { PlayerBase } from './base';\nimport { Status } from './interface';\n\nexport class PlayerStatus extends PlayerBase {\n  // 当前状态\n  public status = Status.paused;\n\n  public get isPaused() {\n    return this.status === Status.paused;\n  }\n}\n","import { Subject } from 'rxjs';\n\nimport { PlayerSong } from '../audio/interface';\nimport { RxAudio } from '../audio/rx-audio';\nimport { DEFAULT_CONFIG, TEMP_PLAYLIST_ID } from './constants';\nimport { Config } from './interface';\n\nexport class PlayerBase {\n  // 当前播放下标\n  public currentIndex = -1;\n\n  // 当前播放列表\n  public songList: PlayerSong[] = [];\n\n  // 选择了列表中第几首歌播放\n  public click$ = new Subject<number>();\n\n  // 当前歌曲播放结束\n  public end$ = new Subject<any>();\n\n  // 当前歌曲播放错误\n  public error$ = new Subject<{ index: number; data: any }>();\n\n  // 当前歌曲信息有变更\n  public persistTask$ = new Subject<PlayerSong>();\n\n  // 歌曲预载入列表有变更\n  public preloadTask$ = new Subject<PlayerSong[]>();\n\n  // 歌曲触发播放了\n  public play$ = new Subject<void>();\n\n  // 当前歌曲正常播放了\n  public played$ = new Subject<void>();\n\n  // 配置, 需要手动配置\n  public config: Config = {\n    ...DEFAULT_CONFIG,\n  };\n\n  // 当前音频对象\n  public rxAudio: RxAudio | undefined;\n\n  // 当前音量\n  public volume = 1;\n\n  // 当前播放列表的 基础列表 (即初始化时是哪个列表载入的)\n  public basePlaylistId: string = TEMP_PLAYLIST_ID;\n\n  // 错误状态\n  protected errorStatus = {\n    nu: 0,\n    continuous: 0,\n  };\n}\n","import { of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { DEFAULT_PEAK_CONFIG } from '../audio/constant';\nimport { getSongUrl } from '../audio/helper';\nimport { PeakSong } from '../audio/interface';\nimport { PoolAudio } from '../audio/pool-audio';\nimport { PlayerPlay } from './play';\n\nconst poolAudio = new PoolAudio();\n\nconst player = new PlayerPlay();\n\nplayer.songChange$\n  .pipe(\n    switchMap((song) => {\n      const poolItem = poolAudio.getSong(\n        {\n          song,\n          peakConfig: { ...DEFAULT_PEAK_CONFIG, duration: Number.MAX_SAFE_INTEGER as 0 },\n        },\n        of({\n          song: {\n            ...song,\n            url: getSongUrl(song),\n            peakStartTime: 0,\n            peakDuration: Number.MAX_SAFE_INTEGER,\n          } as PeakSong,\n          changed: false,\n        })\n      );\n\n      return player.playSong(poolItem.source$);\n    })\n  )\n  .subscribe(console.log, console.warn);\n\nexport { player };\n","import { GraphQLClient } from 'graphql-request';\nimport { print } from 'graphql';\nimport gql from 'graphql-tag';\nexport type Maybe<T> = T | null;\nexport type Exact<T extends { [key: string]: unknown }> = { [K in keyof T]: T[K] };\n/** All built-in and custom scalars, mapped to their actual values */\nexport type Scalars = {\n  ID: string;\n  String: string;\n  Boolean: boolean;\n  Int: number;\n  Float: number;\n  KrcArray: any;\n};\n\nexport type Query = {\n  __typename?: 'Query';\n  lrc?: Maybe<Lrc>;\n  krc?: Maybe<Krc>;\n  song?: Maybe<Song>;\n  search: Array<SearchSong>;\n  url: Scalars['String'];\n  parseUrl: Array<SearchSong>;\n  getPeak: SongPeaks;\n};\n\n\nexport type QueryLrcArgs = {\n  milliseconds?: Maybe<Scalars['Float']>;\n  keyword?: Maybe<Scalars['String']>;\n  provider: Provider;\n  id: Scalars['String'];\n};\n\n\nexport type QueryKrcArgs = {\n  milliseconds?: Maybe<Scalars['Float']>;\n  keyword?: Maybe<Scalars['String']>;\n  provider: Provider;\n  id: Scalars['String'];\n};\n\n\nexport type QuerySongArgs = {\n  provider: Provider;\n  id: Scalars['String'];\n};\n\n\nexport type QuerySearchArgs = {\n  providers?: Maybe<Array<Provider>>;\n  keyword: Scalars['String'];\n};\n\n\nexport type QueryUrlArgs = {\n  br?: Maybe<BitRate>;\n  provider: Provider;\n  id: Scalars['String'];\n};\n\n\nexport type QueryParseUrlArgs = {\n  url: Scalars['String'];\n};\n\n\nexport type QueryGetPeakArgs = {\n  duration: Scalars['Float'];\n  provider: Provider;\n  id: Scalars['String'];\n};\n\nexport enum Provider {\n  Kugou = 'kugou',\n  Netease = 'netease',\n  Xiami = 'xiami'\n}\n\nexport type Lrc = {\n  __typename?: 'Lrc';\n  id: Scalars['String'];\n  provider: Provider;\n  ti?: Maybe<Scalars['String']>;\n  ar?: Maybe<Scalars['String']>;\n  al?: Maybe<Scalars['String']>;\n  by?: Maybe<Scalars['String']>;\n  items: Array<LrcItem>;\n};\n\nexport type LrcItem = {\n  __typename?: 'LrcItem';\n  duration?: Maybe<Scalars['Float']>;\n  offset?: Maybe<Scalars['Float']>;\n  line: Scalars['String'];\n};\n\nexport type Krc = {\n  __typename?: 'Krc';\n  id: Scalars['String'];\n  provider: Provider;\n  ti?: Maybe<Scalars['String']>;\n  ar?: Maybe<Scalars['String']>;\n  al?: Maybe<Scalars['String']>;\n  by?: Maybe<Scalars['String']>;\n  items: Array<Scalars['KrcArray']>;\n};\n\n\nexport type Song = {\n  __typename?: 'Song';\n  id: Scalars['String'];\n  provider: Provider;\n  name: Scalars['String'];\n  duration?: Maybe<Scalars['Float']>;\n  klyric?: Maybe<Scalars['String']>;\n  lrc?: Maybe<Scalars['String']>;\n  privilege?: Maybe<Scalars['String']>;\n  artists?: Maybe<Array<Artist>>;\n  album?: Maybe<Album>;\n  peaks?: Maybe<Array<SongPeaks>>;\n  startTime?: Maybe<Scalars['Float']>;\n};\n\n\nexport type SongStartTimeArgs = {\n  duration?: Maybe<Scalars['Int']>;\n};\n\nexport type Artist = {\n  __typename?: 'Artist';\n  id: Scalars['String'];\n  provider: Provider;\n  name: Scalars['String'];\n};\n\nexport type Album = {\n  __typename?: 'Album';\n  id: Scalars['String'];\n  provider: Provider;\n  name: Scalars['String'];\n  img?: Maybe<Scalars['String']>;\n};\n\nexport type SongPeaks = {\n  __typename?: 'SongPeaks';\n  id: Scalars['String'];\n  provider: Provider;\n  duration: Scalars['Int'];\n  startTime: Scalars['Float'];\n};\n\nexport type SearchSong = {\n  __typename?: 'SearchSong';\n  id: Scalars['String'];\n  provider: Provider;\n  name: Scalars['String'];\n  privilege?: Maybe<Privilege>;\n  artists?: Maybe<Array<SearchArtist>>;\n  album?: Maybe<SearchAlbum>;\n  duration?: Maybe<Scalars['Float']>;\n};\n\nexport enum Privilege {\n  Deny = 'deny',\n  Allow = 'allow',\n  Unknown = 'unknown'\n}\n\nexport type SearchArtist = {\n  __typename?: 'SearchArtist';\n  id?: Maybe<Scalars['String']>;\n  name: Scalars['String'];\n};\n\nexport type SearchAlbum = {\n  __typename?: 'SearchAlbum';\n  id?: Maybe<Scalars['String']>;\n  name: Scalars['String'];\n  img?: Maybe<Scalars['String']>;\n};\n\nexport enum BitRate {\n  Mid = 'mid',\n  High = 'high',\n  Sq = 'sq',\n  Hq = 'hq'\n}\n\nexport type Mutation = {\n  __typename?: 'Mutation';\n  addPeakTime: Scalars['Boolean'];\n};\n\n\nexport type MutationAddPeakTimeArgs = {\n  peak: SongPeaksInput;\n  provider: Provider;\n  id: Scalars['String'];\n};\n\nexport type SongPeaksInput = {\n  precision: Scalars['Int'];\n  peaks: Array<Scalars['Float']>;\n};\n\nexport type Base = {\n  __typename?: 'Base';\n  id: Scalars['String'];\n  provider: Provider;\n};\n\nexport type AddPeakTimeMutationVariables = Exact<{\n  id: Scalars['String'];\n  provider: Provider;\n  peak: SongPeaksInput;\n}>;\n\n\nexport type AddPeakTimeMutation = (\n  { __typename?: 'Mutation' }\n  & Pick<Mutation, 'addPeakTime'>\n);\n\nexport type KrcQueryVariables = Exact<{\n  id: Scalars['String'];\n  provider: Provider;\n}>;\n\n\nexport type KrcQuery = (\n  { __typename?: 'Query' }\n  & { krc?: Maybe<(\n    { __typename?: 'Krc' }\n    & Pick<Krc, 'items'>\n  )> }\n);\n\nexport type LrcQueryVariables = Exact<{\n  id: Scalars['String'];\n  provider: Provider;\n}>;\n\n\nexport type LrcQuery = (\n  { __typename?: 'Query' }\n  & { lrc?: Maybe<(\n    { __typename?: 'Lrc' }\n    & { items: Array<(\n      { __typename?: 'LrcItem' }\n      & Pick<LrcItem, 'duration' | 'offset' | 'line'>\n    )> }\n  )> }\n);\n\nexport type ParseUrlQueryVariables = Exact<{\n  url: Scalars['String'];\n}>;\n\n\nexport type ParseUrlQuery = (\n  { __typename?: 'Query' }\n  & { parseUrl: Array<(\n    { __typename?: 'SearchSong' }\n    & Pick<SearchSong, 'id' | 'provider' | 'name'>\n    & { artists?: Maybe<Array<(\n      { __typename?: 'SearchArtist' }\n      & Pick<SearchArtist, 'name'>\n    )>> }\n  )> }\n);\n\nexport type SearchQueryVariables = Exact<{\n  keyword: Scalars['String'];\n  providers?: Maybe<Array<Provider>>;\n}>;\n\n\nexport type SearchQuery = (\n  { __typename?: 'Query' }\n  & { search: Array<(\n    { __typename?: 'SearchSong' }\n    & Pick<SearchSong, 'id' | 'name' | 'provider'>\n    & { artists?: Maybe<Array<(\n      { __typename?: 'SearchArtist' }\n      & Pick<SearchArtist, 'name'>\n    )>>, album?: Maybe<(\n      { __typename?: 'SearchAlbum' }\n      & Pick<SearchAlbum, 'name'>\n    )> }\n  )> }\n);\n\nexport type SongQueryVariables = Exact<{\n  id: Scalars['String'];\n  provider: Provider;\n  duration?: Maybe<Scalars['Int']>;\n}>;\n\n\nexport type SongQuery = (\n  { __typename?: 'Query' }\n  & { song?: Maybe<(\n    { __typename?: 'Song' }\n    & Pick<Song, 'provider' | 'id' | 'name' | 'duration' | 'startTime' | 'privilege'>\n    & { artists?: Maybe<Array<(\n      { __typename?: 'Artist' }\n      & Pick<Artist, 'id' | 'name'>\n    )>> }\n  )> }\n);\n\n\nexport const AddPeakTimeDocument = gql`\n    mutation addPeakTime($id: String!, $provider: Provider!, $peak: SongPeaksInput!) {\n  addPeakTime(id: $id, provider: $provider, peak: $peak)\n}\n    `;\nexport const KrcDocument = gql`\n    query krc($id: String!, $provider: Provider!) {\n  krc(id: $id, provider: $provider) {\n    items\n  }\n}\n    `;\nexport const LrcDocument = gql`\n    query lrc($id: String!, $provider: Provider!) {\n  lrc(id: $id, provider: $provider) {\n    items {\n      duration\n      offset\n      line\n    }\n  }\n}\n    `;\nexport const ParseUrlDocument = gql`\n    query parseUrl($url: String!) {\n  parseUrl(url: $url) {\n    id\n    provider\n    name\n    artists {\n      name\n    }\n  }\n}\n    `;\nexport const SearchDocument = gql`\n    query search($keyword: String!, $providers: [Provider!]) {\n  search(keyword: $keyword, providers: $providers) {\n    id\n    name\n    provider\n    artists {\n      name\n    }\n    album {\n      name\n    }\n  }\n}\n    `;\nexport const SongDocument = gql`\n    query song($id: String!, $provider: Provider!, $duration: Int) {\n  song(id: $id, provider: $provider) {\n    provider\n    id\n    name\n    duration\n    artists {\n      id\n      name\n    }\n    startTime(duration: $duration)\n    privilege\n  }\n}\n    `;\n\nexport type SdkFunctionWrapper = <T>(action: () => Promise<T>) => Promise<T>;\n\n\nconst defaultWrapper: SdkFunctionWrapper = sdkFunction => sdkFunction();\nexport function getSdk(client: GraphQLClient, withWrapper: SdkFunctionWrapper = defaultWrapper) {\n  return {\n    addPeakTime(variables: AddPeakTimeMutationVariables): Promise<AddPeakTimeMutation> {\n      return withWrapper(() => client.request<AddPeakTimeMutation>(print(AddPeakTimeDocument), variables));\n    },\n    krc(variables: KrcQueryVariables): Promise<KrcQuery> {\n      return withWrapper(() => client.request<KrcQuery>(print(KrcDocument), variables));\n    },\n    lrc(variables: LrcQueryVariables): Promise<LrcQuery> {\n      return withWrapper(() => client.request<LrcQuery>(print(LrcDocument), variables));\n    },\n    parseUrl(variables: ParseUrlQueryVariables): Promise<ParseUrlQuery> {\n      return withWrapper(() => client.request<ParseUrlQuery>(print(ParseUrlDocument), variables));\n    },\n    search(variables: SearchQueryVariables): Promise<SearchQuery> {\n      return withWrapper(() => client.request<SearchQuery>(print(SearchDocument), variables));\n    },\n    song(variables: SongQueryVariables): Promise<SongQuery> {\n      return withWrapper(() => client.request<SongQuery>(print(SongDocument), variables));\n    }\n  };\n}\nexport type Sdk = ReturnType<typeof getSdk>;","import { Provider } from '../../apollo/graphql';\nimport { PlayerSong } from '../audio/interface';\n\nexport const demoSongs: Omit<PlayerSong, 'url'>[] = [\n  {\n    id: '6e490acfb95e6fc8870b5c7d0ea40c23',\n    name: '你就不要想起我',\n    provider: Provider.Kugou,\n    artists: [\n      {\n        id: '6046',\n        name: '田馥甄',\n      },\n    ],\n    album: {\n      id: '965595',\n      name: '渺小',\n      img: 'http://imge.kugou.com/stdmusic/400/20160713/20160713100013479508.jpg',\n    },\n    duration: 282,\n    privilege: 'allow',\n    peakDuration: 35,\n    peakStartTime: 185,\n  },\n  {\n    id: '1770409076',\n    name: '魔鬼中的天使',\n    provider: Provider.Xiami,\n    artists: [\n      {\n        id: '78523',\n        name: '田馥甄',\n      },\n    ],\n    album: {\n      id: '459960',\n      name: 'My Love',\n      img: 'http://img.xiami.net/images/album/img72/801972/4599601526801972_3.jpg',\n    },\n    peakStartTime: 166.6,\n    duration: null,\n    privilege: 'allow',\n    peakDuration: 35,\n  },\n  {\n    id: '296885',\n    name: '寂寞寂寞就好',\n    provider: Provider.Netease,\n    artists: [\n      {\n        id: '9548',\n        name: '田馥甄',\n      },\n    ],\n    album: {\n      id: '29447',\n      name: 'To Hebe',\n      img: 'https://p1.music.126.net/_o12jScXd17VO79VCsitbA==/109951163167534993.jpg',\n    },\n    peakStartTime: 87.9,\n    duration: 275.12,\n    privilege: 'allow',\n    peakDuration: 35,\n  },\n];\n","import { GraphQLClient } from 'graphql-request';\n\nimport { getSdk } from './graphql';\n\nconst client = new GraphQLClient('https://music.xinshangshangxin.com/graphql');\n\nconst sdk = getSdk(client);\n\nexport { sdk };\n","import { useCallback, useEffect, useLayoutEffect, useMemo } from 'react';\nimport { BehaviorSubject, Observable, Subject, Subscription } from 'rxjs';\n\n// export const useObservable = <T>(maker: () => Observable<T>, initValue: T) => {\n//   let value: T, setValue: Dispatch<SetStateAction<T>>;\n//   const [initialState, subscription] = useMemo(() => {\n//     let initialState = initValue;\n//     const source = maker();\n//     let setter = (v: T) => {\n//       if (!setValue) {\n//         initialState = v;\n//       } else {\n//         setValue(v);\n//         setter = setValue;\n//       }\n//     };\n//     const subscription = source.subscribe((v) => setter(v));\n\n//     return [initialState, subscription] as [T, Subscription];\n//   }, [initValue, maker, setValue]);\n\n//   [value, setValue] = useState(initialState);\n\n//   useEffect(() => () => subscription.unsubscribe(), [subscription]);\n\n//   return value;\n// };\n\nexport const useEventHandler = <Event>(\n  defaultHandler?: (source: Observable<Event>) => Subscription | void\n) => {\n  const subject = useMemo(() => new Subject<Event>(), []);\n  const callback = useCallback((e: Event) => subject.next(e), [subject]);\n  useEffect(() => {\n    if (defaultHandler instanceof Array) {\n      defaultHandler(subject);\n    }\n    return () => subject.complete();\n  }, [defaultHandler, subject]);\n  return [callback, subject] as [typeof callback, Subject<Event>];\n};\n\nexport const useBehaviorSubject = <T>(initValue: T) => {\n  const subject = useMemo(() => new BehaviorSubject(initValue), [initValue]);\n\n  useEffect(() => () => subject.complete(), [subject]);\n  return subject;\n};\n\nexport const useSubject = <T>() => {\n  const subject = useMemo(() => new Subject<T>(), []);\n\n  useEffect(() => () => subject.complete(), [subject]);\n  return subject;\n};\n\nexport const useObservableFrom = <T>(inputs: T) => {\n  const subject$ = useBehaviorSubject(inputs);\n  useMemo(() => subject$.next(inputs), [inputs, subject$]);\n  return useMemo(() => subject$.asObservable(), [subject$]);\n};\n\nexport const useWhenLayout = <T>(builder: () => T) => {\n  const subject = useMemo(() => new Subject<T>(), []);\n  useLayoutEffect(() => subject.next(builder()));\n  useEffect(() => () => subject.complete(), [subject]);\n  return subject;\n};\n\nexport const useListener = (subscriptionMaker: () => Subscription) => {\n  const subscription = useMemo(subscriptionMaker, []);\n  useEffect(() => () => subscription.unsubscribe(), [subscription]);\n};\n","import './style.scss';\n\nimport { IconButton } from '@material-ui/core';\nimport PauseIcon from '@material-ui/icons/Pause';\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\nimport SkipNextIcon from '@material-ui/icons/SkipNext';\nimport SkipPreviousIcon from '@material-ui/icons/SkipPrevious';\nimport React, { useEffect, useState } from 'react';\nimport { debounceTime } from 'rxjs/operators';\n\nimport { player } from '../../helpers/player';\nimport { useEventHandler } from '../../rx';\n\nfunction BottomNav() {\n  const [song, setSong] = useState(player.currentSong);\n\n  useEffect(() => {\n    const s = player.songChange$.subscribe(() => {\n      setSong(player.currentSong);\n    });\n\n    return () => {\n      s.unsubscribe();\n    };\n  });\n\n  const [paused, setPaused] = useState(player.isPaused);\n  useEffect(() => {});\n\n  const [onClick, click$] = useEventHandler();\n\n  useEffect(() => {\n    const s = click$.pipe(debounceTime(100)).subscribe(() => {\n      console.info('player.isPaused: ', player.isPaused);\n      if (!player.isPaused) {\n        player.pause();\n        setPaused(true);\n      } else {\n        player.play();\n        setPaused(false);\n      }\n    });\n\n    return () => {\n      s.unsubscribe();\n    };\n  });\n\n  const [onPre, pre$] = useEventHandler();\n  useEffect(() => {\n    const s = pre$.subscribe(() => {\n      player.next();\n    });\n\n    return () => {\n      s.unsubscribe();\n    };\n  });\n\n  const [onNext, next$] = useEventHandler();\n  useEffect(() => {\n    const s = next$.subscribe(() => {\n      player.next();\n    });\n\n    return () => {\n      s.unsubscribe();\n    };\n  });\n\n  return (\n    <div className=\"play-bar\">\n      <div className=\"bottom\">\n        <div className=\"left\">\n          <div className=\"cover\">\n            <img src={song?.album?.img || undefined} alt=\"img\" />\n          </div>\n\n          <div className=\"info\">\n            <div className=\"song-name\">{song?.name}</div>\n\n            <div className=\"singers\">\n              {song?.artists\n                ?.map(({ name }) => {\n                  return name;\n                })\n                .join(', ')}\n            </div>\n          </div>\n        </div>\n\n        <div className=\"center\">\n          <div className=\"controls\">\n            <IconButton className=\"previous\" onClick={onPre}>\n              <SkipPreviousIcon />\n            </IconButton>\n\n            <div className=\"play-btn\" onClick={onClick}>\n              {paused ? (\n                <IconButton>\n                  <PlayArrowIcon />\n                </IconButton>\n              ) : (\n                <IconButton>\n                  <PauseIcon />\n                </IconButton>\n              )}\n            </div>\n\n            <IconButton className=\"next\" onClick={onNext}>\n              <SkipNextIcon />\n            </IconButton>\n          </div>\n        </div>\n\n        <div className=\"right\"></div>\n      </div>\n    </div>\n  );\n}\n\nexport { BottomNav };\n","import './style.scss';\n\nimport React, { useEffect } from 'react';\n\nimport { player } from '../../../helpers/player';\nimport { useEventHandler } from '../../../rx';\nimport { SongListItemProps } from '../../interface';\n\nexport function SongListItem(props: SongListItemProps) {\n  const [onClick, click$] = useEventHandler();\n\n  useEffect(() => {\n    const subscription = click$.subscribe(() => {\n      const index = player.song2index(props.song);\n      console.info('====', index, player.songList);\n\n      if (index === -1) {\n        player.add(props.song, 'end');\n        player.playAt('end');\n      } else {\n        player.playAt(index);\n      }\n    }, console.warn);\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  });\n\n  return (\n    <div className=\"song-box\">\n      <span className=\"song-info\" onClick={onClick}>\n        <img className=\"logo\" src=\"assets/logos/kugou.png\" alt=\"logo\" />\n        <span className=\"song-name\">{props.song.name}</span>\n\n        <span className=\"song-artists\">\n          {props.song.artists\n            ?.map(({ name }) => {\n              return name;\n            })\n            .join(', ')}\n        </span>\n\n        <span className=\"song-control\">\n          <i className=\"material-icons\"></i>\n        </span>\n      </span>\n    </div>\n  );\n}\n\nexport default SongListItem;\n","import React from 'react';\n\nimport './style.scss'\n\nimport { PlayerSong } from '../../helpers/audio/interface';\nimport SongListItem from './song-item/';\n\nfunction SongList(props: {songs: Omit<PlayerSong, 'url'>[]}) {\n  return (\n    <div className=\"song-list\">\n      {props.songs.map((song) => {\n        return <SongListItem key={song.id + song.provider} song={song} />;\n      })}\n    </div>\n  );\n}\n\nexport default SongList;\n","import { Subject } from 'rxjs';\n\nexport const searchSubject = new Subject<string>();\nsearchSubject.next()\n","import './style.scss';\n\nimport { IconButton } from '@material-ui/core';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport React, { useEffect } from 'react';\nimport { debounceTime, distinctUntilChanged, map } from 'rxjs/operators';\n\nimport { searchSubject } from '../../helpers/singleton';\nimport { useEventHandler } from '../../rx';\n\nexport function TopNav() {\n  const [onKeyUp, keyUp$] = useEventHandler<any>();\n\n  useEffect(() => {\n    const s = keyUp$\n      .pipe(\n        map((e) => {\n          return e.target.value as string;\n        }),\n        map((data) => (data || '').trim()),\n        debounceTime(300),\n        distinctUntilChanged()\n      )\n      .subscribe((data) => {\n        console.info('data: ', data);\n        searchSubject.next(data);\n      }, console.warn);\n\n    return () => {\n      s.unsubscribe();\n    };\n  });\n\n  return (\n    <div className=\"top-nav\">\n      <Button>Music</Button>\n\n      <div className=\"search\">\n        <TextField type=\"text\" placeholder=\"歌曲/歌手\" onKeyUp={onKeyUp} />\n      </div>\n\n      <IconButton aria-label=\"delete\" size=\"small\">\n        <SettingsIcon fontSize=\"inherit\" />\n      </IconButton>\n    </div>\n  );\n}\n","import './style.scss';\n\nimport React, { useEffect, useState } from 'react';\nimport { from, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\nimport { sdk } from '../../apollo';\nimport { BottomNav } from '../../components/bottom-nav';\nimport SongList from '../../components/song-list';\nimport { TopNav } from '../../components/top-nav';\nimport { PlayerSong } from '../../helpers/audio/interface';\nimport { player } from '../../helpers/player';\nimport { searchSubject } from '../../helpers/singleton';\n\nexport function Search() {\n  const [songs, setSongs] = useState<Omit<PlayerSong, 'url'>[]>(player.songList);\n\n  useEffect(() => {\n    const s = searchSubject\n      .pipe(\n        switchMap((v) => {\n          if (!v) {\n            return of({ search: player.songList });\n          }\n\n          return from(sdk.search({ keyword: v }));\n        })\n      )\n      .subscribe((songList) => {\n        console.info(songList);\n        setSongs(songList.search);\n      });\n\n    return () => {\n      s.unsubscribe();\n    };\n  });\n\n  return (\n    <div className=\"layout\">\n      <TopNav />\n      <div className=\"main\">\n        <SongList songs={songs} />\n      </div>\n\n      <div className=\"play-bar\">\n        <BottomNav />\n      </div>\n    </div>\n  );\n}\n","import './App.scss';\n\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport { player } from './helpers/player';\nimport { demoSongs } from './helpers/player/demo';\nimport { Search } from './pages/search';\n\nexport default function App() {\n  player.loadSongList(demoSongs);\n\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/about\"></Route>\n        <Route path=\"/topics\"></Route>\n        <Route path=\"/\">\n          <Search />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}